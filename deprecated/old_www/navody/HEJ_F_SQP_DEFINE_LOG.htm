<!doctype html public "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1250">
<title>Funkce _sqp_define_log</title>
<link rel='stylesheet' style='text/css' href='../function.css'>
</head>

<body bgcolor="#FFFFFF" text="#000000">



<h2 class=function>_sqp_define_log</h2>
<img src='../images/sql.gif' width='44' height='16' border='0' alt='sql' align='middle' hspace='2'>


<br><br>
<div class='typ'>FUNCTION <b>_sqp_define_log</b>(IN logname CHAR(31), IN pathname CHAR(256), IN format(50)) RETURNS BOOLEAN;
</div>


<p><b>Parametry</b></p>

<table border=1 cols=2 frame=box rules=all width=480>

<tr valign="top">
<td width=28%><i>logname </i></td>
<td width=72%> jméno logu, velikost písmen se ignoruje</td>
</tr>

<tr valign="top">
<td width=28%><i>pathname </i></td>
<td width=72%> jméno souboru, do nìhož se bude log zapisovat</td>
</tr>

<tr valign="top">
<td width=28%><i>format </i></td>
<td width=72%> formát øádky v logu</td>
</tr>
</table><br>

<p><b>Od verze</b></p>

<p>7.0, upraveno v 10.0</p>

<p><b>Popis</b></p>

<p>Funkce vytvoøí nový log a pøidìlí mu jméno <i>logname</i>, které lze využívat ve funkci <a href="HEJ_F_SQP_TRACE.htm"><code>_sqp_trace</code></a> pro nastavení <a href="../xml/html/tracelog.html">logování</a> èinnosti SQL serveru. Log se zapisuje do souboru zadaného parametrem <i>pathname</i>. Pokud je <i>pathname</i> prázdné, soubor se vytvoøí ve stejném adresáøi jako základní log serveru, pod jménem <i>logname</i> a s&nbsp;pøíponou <code>txt</code>. Pokud zadaný soubor již existuje, bude se log zapisovat na jeho konec. </p>

<p>Základní log serveru (oznaèovaný prázdným jménem) je definován automaticky pøi startu serveru a není tøeba pro nìj tuto funkci volat.</p>

<p>Funkci je možné také použít ke zmìnì formátu již existujícího logu (vèetnì základního). V tom pøípadì se neuvádí (ignoruje) cesta <i>pathname</i>.</p>

<p>Založení èi zmìnu formátu logu mùže provádìt jen Provozní správce databáze - viz <a href="../xml/html/admins.html">Administrování SQL serveru</a>.</p>

<p>Pokud je parametr <i>format</i> prázdný, pak se log vytváøí ve standardním formátu. Odlišný formát lze zadat tak, že se v&nbsp;parametru <i>format</i> uvede formátovací øetìzec znakù podle pravidel pro funkce <code>sprinf</code> jazyka C, v&nbsp;nìmž se místa, do nichž mají být doplnìny promìnné informace, oznaèí takto:</p>

<pre><code>%d - datum, den a mìsíc
%D - datum, den, mìsíc a rok
%t - èas, hodina a minuta
%T - èas, hodina, minuta a sekunda
%s - oznaèení situace (jedno písmeno) 
%u - jméno uživatele nebo služebního procesu 
%c - èíslo klienta
%e – unikátní èíslo session (spojení klienta se serverem)
%a – jméno otevøeného schématu
%m - text hlášení </code></pre>

<p>Podrobnosti a význam jednotlivých parametrù naleznete <a href="../xml/html/tracelog.html">zde</a> a <a href="../xml/html/_iv_logged_users.html">zde</a>. </p>
<p>Napøíklad standardnímu formátu logu odpovídá formát "<code>%d %T %s %u %m</code>". Ve formátovacím øetìzci lze uvést nejvýše 10 takových parametrù, délka formátovacího øetìzce je nejvýše 50 znakù.</p>

<p>Lze pøedepsat implicitní formát, tedy ten, který má základní log po spuštìní serveru a ostatní logy vytoøené s prázdným formátem. Zadá se to v registru pod pøíslušnou databází, jako hodnotu <strong>DefaultLogFormat</strong>.</p>

<p><b>Hodnota funkce</b></p>

<p>Funkce vrátí TRUE pokud uspìje. Vrací FALSE pøi chybì, která mùže být zpùsobena tím, že se nepodaøí vytvoøit èi otevøít soubor na zadaném místì, nebo nedostatkem pamìti.</p>

<p><b>Viz</b></p>

<ul class='viz'>
 <li><a href="../xml/html/_iv_recent_log.html"><code>_iv_recent_log</code></a></li>
 <li><a href="../xml/html/_iv_pending_log_reqs.html"><code>_iv_pending_log_reqs</code></a></li>
 <li><a href="../xml/html/_iv_logged_users.html"><code>_iv_logged_users</code></a></li>
</ul>

<br>
<p><b>Pøíklad:</b></p>

<p>1. Zapnìte pøi startu serveru zápis SQL pøíkazù a logování klientù do pomocného logu DEBUGLOG:</p>. 

<pre><code>PROCEDURE _ON_SERVER_START();
BEGIN
  CALL _sqp_define_log('debuglog','c:\pom\debuglog.log','%d %t %s %a %u %m');
 
  CALL _sqp_trace(TRACE_LOGIN, '', '', 'debuglog', 3);
  CALL _sqp_trace(TRACE_SQL,   '', '', 'debuglog', 3);
  CALL _sqp_trace(TRACE_USER_ERROR,   '', '', 'debuglog', 3);
  CALL _sqp_trace(TRACE_USER_WARNING,   '', '', 'debuglog', 3);
// atd..  
END</code></pre>

<p>2. Formát vhodný pro import do tabulky (pro následnou analýzu pomocí filtrování a tøídìní pomocí SQL serveru):</p>
<pre><code>  CALL _sqp_define_log('debuglog','c:\sql_logy\debuglog.log','%D#%T#%s#%a#%u#%c#%e#%m#');
</code></pre>
<p>odpovídající tabulka má tvar:</p>
<pre><code>CREATE TABLE `LOG_TABLE` (
`DT` DATE ,
`TM` TIME ,
`SITUAT` CHAR(1) COLLATE CSSTRING  ,
`APL` CHAR(31) COLLATE CSSTRING  ,
`USR` CHAR(31) COLLATE CSSTRING  ,
`CLNUM` SMALLINT ,
`SESS` INTEGER ,
`MESS` CHAR(255) COLLATE CSSTRING  ,
`CONTX` LONG VARCHAR COLLATE CSSTRING  )</code></pre>
<p>odpovídající pøenos (import dat z formátu CSV):</p>
<pre><code>* 3"C:\temp\dlog.log" 0"":"":"Log_table" 0 0""
* "1" 0  0"DT" 0  0 0 0
* "2" 0  0"TM" 0  0 0 0
* "3" 0  0"SITUAT" 0  0 0 0
* "4" 0  0"APL" 0  0 0 0
* "5" 0  0"USR" 0  0 0 0
* "6" 0  0"CLNUM" 0  0 0 0
* "7" 0  0"SESS" 0  0 0 0
* "8" 0  0"MESS" 0  0 0 0
* "9" 0  0"CONTX" 0  0 0 0
+ 0 35 34 1 0 0"DD.MM.CCYY","hh:mm:ss","DD.MM.CCYY h.mm.ss","False,True", 46
</code></pre>
</body>
</html>
