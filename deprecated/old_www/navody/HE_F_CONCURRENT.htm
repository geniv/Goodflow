<!doctype html public "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1250">
<title>Funkce concurrent</title>
<link rel='stylesheet' style='text/css' href='../function.css'>
</head>

<body bgcolor="#FFFFFF" text="#000000">



<h2 class=function>concurrent</h2>
<img src='../images/cpp.gif' width='44' height='16' border='0' alt='c/c++' align='middle' hspace='2'><img src='../images/pascal.gif' width='44' height='16' border='0' alt='pascal' align='middle' hspace='2'>


<br><br>
<div class='typ'>void <b>[cd_]concurrent</b>([cdp_t cdp], BOOL state);<br>
procedure <b>[cd_]concurrent</b>([cdp : cdp_t]; state : Boolean);
</div>


<p><b>Parametry</b></p>

<table border=1 cols=2 frame=box rules=all width=449>

<tr valign="top">
<td width=19%><i>state</i> </td>
<td width=81%>TRUE zapíná a FALSE vypíná soubìžnou práci klienta a serveru </td>
</tr>

<tr valign="top">
<td width=19%>[<i>cdp </i></td>
<td width=81%><a href="HE_EXTCD.htm">kontextová promìnná</a> klienta]  </td>
</tr>
</table><br>

<p><b>Popis </b></p>

<p>Procedura zapíná nebo vypíná soubìžnou práci klient a serveru. </p>

<p>Je-li parametr <i>state</i> roven FALSE, pak se po pøedání každého požadavku, který není obsažen v&nbsp;balíku, èeká na jeho provedení.</p>

<p>Je-li parametr <i>state</i> roven TRUE, bude komunikace probíhat v&nbsp;režimu soubìžného zpracování. V tomto režimu zavolání funkce databázového jádra zpùsobí vyslání požadavku do serveru, ale (z dùvodù efektivnìjšího fungování) se neèeká na výsledek. Po návratu z volání nemusí být tedy ve výstupních parametrech žádná smysluplná hodnota. Ta se do nich zapíše teprve poté, až pøijde od serveru odpovìï.</p>

<p>Pozor !  Uvìdomte si, že dùsledkem toho mohou být zcela asynchronní zmìny obsahu promìnných, na nìž byla spuštìna operace ètení!</p>

<p>Klient mùže zjistit, zda na jeho poslední požadavek již pøišla odpovìï, když zavolá funkci <b><code>answered</code></b>. Její hodnota FALSE signalizuje, že odpovìï dosud nedošla.</p>

<p>Pokud klient vyšle další požadavek pøed obdržením odpovìdi na pøedchozí požadavek, je tento nový požadavek pozdržen do pøíchodu odpovìdi. Bezprostøednì poté je nový požadavek komunikaèní knihovnou odeslán. Pro klienta pak neexistuje zpùsob, jak zjistit úspìch èi neúspìch provedení prvního z tìchto požadavkù. Proto takový postup nedoporuèujeme.</p>

<p>Funkce <b><code>Break</code></b>, která ruší právì provádìný požadavek, pracuje asynchronnì bez ohledu na to, zda je povolena soubìžná práce.</p>

<p>Po provedení funkce <b><code>interf_init</code></b> je soubìžné zpracování vypnuto.</p>

<p><b>Viz</b></p>

<ul class='viz'><li><a href="HE_F_INTERFINIT.htm">interf_init</a> <li><a href="HE_F_BREAK.htm">Break</a> <li><a href="HE_F_ANSWERED.htm">answered</a></ul>

</body>
</html>
