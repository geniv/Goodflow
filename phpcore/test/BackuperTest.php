<?php
namespace classes;

/**
 * phpunit-skelgen --bootstrap ../loader.php --test -- "classes\Backuper" backuper.php
 * mv -v BackuperTest.php ../test/
 * phpunit --bootstrap loader.php BackuperTest
 */

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-21 at 17:39:50.
 */
class BackuperTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Backuper
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Backuper;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        if (file_exists('backup.zip')) unlink('backup.zip');
    }

    /**
     * @covers classes\Backuper::setDestination
     */
    public function testSetDestination()
    {
        $this->object->setDestination('moje_slozka');
        $this->assertEquals('moje_slozka', $this->object->getDestination());
    }

    /**
     * @covers classes\Backuper::addFile
     * @covers classes\Backuper::getFiles
     */
    public function testAddFile()
    {
        $this->assertEquals(array(), $this->object->getFiles());
        $this->object->addFile('logo.png')
                      ->addFile('language')
                      ->addFile('makefile');
        $this->assertEquals(array('logo.png', 'language', 'makefile'), $this->object->getFiles());
    }

    /**
     * @covers classes\Backuper::setFiles
     * @todo   Implement testSetFiles().
     */
    public function testSetFiles()
    {
        $this->object->setFiles(array('logo.png', 'language'));
        $this->assertEquals(array('logo.png', 'language'), $this->object->getFiles());
    }

    /**
     * @covers classes\Backuper::load
     * @covers classes\Backuper::save
     */
    public function testLoad()
    {
        $files = array('logo.png', 'language');
        $this->object->setFiles($files);
        $this->assertNull($this->object->getDestination());
        $this->object->save();  // ulozeni
        $this->assertFileExists(Backuper::DEFAULT_CONFIG_NAME);

        $inst2 = new Backuper;
        $inst2->load(); // nacteni
        $this->assertEquals($files, $inst2->getFiles());
        $this->assertNull($inst2->getDestination());
    }

    /**
     * @covers classes\Backuper::synchronizeCron
     */
    public function testSynchronizeCron()
    {
        $this->assertFileExists(Backuper::DEFAULT_CONFIG_NAME);
        Backuper::synchronizeCron(array('file_format' => 'backup.zip'));
        $this->assertFileExists('backup.zip');

        unlink(Backuper::DEFAULT_CONFIG_NAME);
    }
}
