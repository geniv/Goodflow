<?php
namespace classes;

/**
 * phpunit-skelgen --bootstrap ../loader.php --test -- "classes\Curl" curl.php
 * mv -v CurlTest.php ../test/
 */

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-17 at 13:12:42.
 */
class CurlTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Curl
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Curl;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers classes\Curl::isLoaded
     */
    public function testIsLoaded()
    {
        $this->assertEquals(extension_loaded('curl'), Curl::isLoaded());
        $this->assertEquals(extension_loaded('curl'), $this->object->isLoaded());
    }

    /**
     * @covers classes\Curl::setTimeout
     */
    public function testSetTimeout()
    {
        $this->assertEquals(10, $this->object->getTimeout()); // def

        $this->object->setTimeout(0);
        $this->assertEquals(0, $this->object->getTimeout());

        $this->object->setTimeout(null);
        $this->assertEquals(0, $this->object->getTimeout());

        $this->object->setTimeout(2.54845);
        $this->assertEquals(2, $this->object->getTimeout());
    }

    /**
     * @covers classes\Curl::setReturnTransfer
     */
    public function testSetReturnTransfer()
    {
        $this->assertTrue($this->object->getReturnTransfer());  // def

        $this->object->setReturnTransfer(false);
        $this->assertFalse($this->object->getReturnTransfer());

        $this->object->setReturnTransfer('aa');
        $this->assertTrue($this->object->getReturnTransfer());

        $this->object->setReturnTransfer(null);
        $this->assertFalse($this->object->getReturnTransfer());
    }

    /**
     * @covers classes\Curl::setHeader
     */
    public function testSetHeader()
    {
        $this->assertFalse($this->object->getHeader()); // def

        $this->object->setHeader(true);
        $this->assertTrue($this->object->getHeader());

        $this->object->setHeader('aa');
        $this->assertTrue($this->object->getHeader());
    }

    /**
     * @covers classes\Curl::setUseragent
     */
    public function testSetUseragent()
    {
        $this->assertEquals('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.114 Safari/537.36', $this->object->getUseragent());  // def

        $this->object->setUseragent('muj curl agent');
        $this->assertEquals('muj curl agent', $this->object->getUseragent());

        $this->object->setUseragent(null);
        $this->assertEquals('muj curl agent', $this->object->getUseragent());
    }

    /**
     * @covers classes\Curl::setOption
     */
    public function testSetOption()
    {
        $this->assertEquals(array(), $this->object->getOption(null)); // def

        $this->object->setOption(CURLOPT_URL, 'http://localhost/');
        $this->assertEquals('http://localhost/', $this->object->getOption(CURLOPT_URL));
    }

    /**
     * @covers classes\Curl::url
     */
    public function testUrl()
    {
        $this->assertEmpty($this->object->getUrl());  // def

        $this->object->url('http://localhost/');
        $this->assertEquals('http://localhost/', $this->object->getUrl());

        $this->object->url(null);
        $this->assertEquals('http://localhost/', $this->object->getUrl());
    }

    /**
     * @covers classes\Curl::get
     */
    public function testGet()
    {
        $this->object->get('http://localhost/', array('a' => 1, 'b' => 2));
        $this->assertEquals('http://localhost/?a=1&b=2', $this->object->getUrl());
    }

    /**
     * @covers classes\Curl::post
     */
    public function testPost()
    {
        $pole = array('a' => 1, 'b' => 2);
        $this->object->url('http://localhost/')
                      ->post($pole);
        $this->assertEquals('http://localhost/', $this->object->getUrl());
        $this->assertNull($this->object->getOption(CURLOPT_URL));
        $this->assertEquals(count($pole), $this->object->getOption(CURLOPT_POST));
        $this->assertEquals($pole, $this->object->getOption(CURLOPT_POSTFIELDS));
    }

    /**
     * @covers classes\Curl::exec
     */
    public function testExec()
    {
        $this->object->url('http://localhost/');
        $this->assertEquals('<html><body><h1>It works!</h1>
<p>This is the default web page for this server.</p>
<p>The web server software is running but no content has been added, yet.</p>
</body></html>
', $this->object->exec());

    }

    /**
     * @covers classes\Curl::version
     */
    public function testVersion()
    {
        $v = curl_version();
        $this->assertEquals($v['version'], $this->object->version());
        $this->assertEquals($v['version'], Curl::version());
    }
}
