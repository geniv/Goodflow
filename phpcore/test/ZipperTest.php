<?php
namespace classes;

/**
 * phpunit-skelgen --test -- "classes\Zipper" zipper.php
 * mv -v ZipperTest.php ../test/
 * phpunit --bootstrap loader.php Zipper
 */

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-21 at 11:22:41.
 */
class ZipperTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Zipper
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Zipper;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        // auto mazani vytvorenych souboru
        if (file_exists('archiv.zip')) unlink('archiv.zip');
        if (file_exists('archiv2.zip')) unlink('archiv2.zip');
    }

    /**
     * @covers classes\Zipper::open
     * @covers classes\Zipper::getStatus
     */
    public function testOpen()
    {
        $this->object->open('archiv.zip');
        $this->assertEquals(0, $this->object->getStatus());

        $inst2 = new Zipper('archiv2.zip');
        $this->assertEquals(0, $inst2->getStatus());
    }

    /**
     * @covers classes\Zipper::getFileName
     */
    public function testGetFileName()
    {
        $this->assertEquals('', $this->object->getFileName());
        $this->object->open('archiv.zip');
        $this->assertEquals(__DIR__ . '/archiv.zip', $this->object->getFileName());

        $inst2 = new Zipper('archiv2.zip');
        $this->assertEquals(__DIR__ . '/archiv2.zip', $inst2->getFileName());
    }

    /**
     * @covers classes\Zipper::getStatus
     * @covers classes\Zipper::close
     */
    public function testGetStatus()
    {
        $this->object->open('archiv.zip');
        $this->assertTrue($this->object->isOpen());
        $this->object->addFile('makefile');
        $this->assertTrue($this->object->isOpen());
        $this->object->close();
        $this->assertFalse($this->object->isOpen());

        $inst2 = new Zipper('archiv2.zip');
        $this->assertTrue($inst2->isOpen());
        $inst2->addFile('makefile');
        $this->assertTrue($inst2->isOpen());
        $inst2->close();
        $this->assertFalse($inst2->isOpen());
    }

    /**
     * @covers classes\Zipper::close
     */
    public function testClose()
    {
        $this->object->open('archiv.zip');
        $this->object->addFile('makefile');
        $this->assertTrue($this->object->isOpen());
        $this->object->close();
        $this->assertFalse($this->object->isOpen());
    }

    /**
     * @covers classes\Zipper::close
     * @covers classes\Zipper::__destruct
     */
    public function testClose1()
    {
        $this->object->open('archiv.zip');
        $this->object->addFile('makefile');
        $this->assertTrue($this->object->isOpen());
        unset($this->object); // automaticke uzavirani pri destrukci
    }

    /**
     * @covers classes\Zipper::close
     * @covers classes\Zipper::__destruct
     */
    public function testClose2()
    {
        $this->object->open('archiv.zip');
        $this->object->addFile('makefile');
        $this->assertTrue($this->object->isOpen());
        $this->object = null; // automaticke uzavirani pri destrukci
    }

    /**
     * @covers classes\Zipper::addFromString
     */
    public function testAddFromString()
    {
        $this->object->open('archiv.zip');
        $this->object->addFromString('soubor.txt', 'toto je libovolny obsah');
        $this->object = null;

        $z = new \ZipArchive;
        if ($z->open('archiv.zip') === true) {
          $this->assertEquals('toto je libovolny obsah', $z->getFromName('soubor.txt'));
        }
    }

    /**
     * @covers classes\Zipper::addFile
     */
    public function testAddFile()
    {
        $this->object->open('archiv.zip');
        $this->object->addFile('makefile');
        $this->object = null;

        $z = new \ZipArchive;
        if ($z->open('archiv.zip') === true) {
          $this->assertEquals(file_get_contents('makefile'), $z->getFromName('makefile'));
        }
    }

    /**
     * @covers classes\Zipper::addFile
     */
    public function testAddFile2()
    {
        $this->object->open('archiv.zip');
        $this->object->addFile('makefile', 'new_makefile'); //v zipu bude mit nove jmeno
        $this->object = null;

        $z = new \ZipArchive;
        if ($z->open('archiv.zip') === true) {
          //~ var_dump($z->getStatusString());
          $this->assertEquals(file_get_contents('makefile'), $z->getFromName('new_makefile'));
        }
    }

    /**
     * @covers classes\Zipper::addDir
     */
    public function testAddDir()
    {
        $this->object->open('archiv.zip');
        $this->object->addDir('templates');
        $this->object = null;

        $z = new \ZipArchive;
        if ($z->open('archiv.zip') === true) {
          //~ var_dump($z->getNameIndex(0));
          $this->assertEquals('', $z->getFromName('templates/'));
        }
    }

    /**
     * @covers classes\Zipper::addDir
     */
    public function testAddDir2()
    {
        $this->object->open('archiv.zip');
        $this->object->addDir('templates', 'tpl');
        $this->object = null;

        $z = new \ZipArchive;
        if ($z->open('archiv.zip') === true) {
          //~ var_dump($z->getNameIndex(0));
          $this->assertEquals('', $z->getFromName('tpl/'));
        }
    }
}
