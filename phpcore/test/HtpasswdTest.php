<?php
namespace classes;

/**
 * phpunit-skelgen --bootstrap ../loader.php --test -- "classes\Htpasswd" htpasswd.php
 * mv -v HtpasswdTest.php ../test/
 */

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-04 at 22:00:51.
 */
class HtpasswdTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Htpasswd
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Htpasswd;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        if (file_exists(Htpasswd::FILE)) {
            unlink(Htpasswd::FILE);
        }
    }

    /**
     * @covers classes\Htpasswd::load
     */
    public function testLoad()
    {
        $this->assertFileNotExists(Htpasswd::FILE);
        // $this->object->load();
        $this->object->addUser('pokus', 'aa');
        $this->object->save();
        $this->assertFileExists(Htpasswd::FILE);

        $this->object = new Htpasswd;
        $this->object->load();
        $this->assertEquals(array('pokus'), $this->object->getUsers());
        $this->assertEquals(array('pokus' => 'YW61KcugLBIt2'), $this->object->getUsers(true));
    }

    /**
     * @covers classes\Htpasswd::load
     * @expectedException classes\ExceptionHtpasswd
     */
    public function testLoadException()
    {
        $this->object->load();
    }

    /**
     * @covers classes\Htpasswd::save
     */
    public function testSave()
    {
        // $this->object->addUser('pokus', 'aa')
        //             ->addUser('pokus1', 'bb');
        $this->object->save();
        $this->assertFileNotExists(Htpasswd::FILE);


    }

    /**
     * @covers classes\Htpasswd::getUsers
     */
    public function testGetUsers()
    {
        $this->assertFileNotExists(Htpasswd::FILE);
        $this->object->addUser('pokus', 'aa')
                    ->addUser('pokus1', 'bb');
        $this->object->save();
        $this->assertFileExists(Htpasswd::FILE);

        $this->assertEquals(array('pokus', 'pokus1'), $this->object->getUsers());
        $this->assertEquals(array(
            'pokus' => 'YW61KcugLBIt2',
            'pokus1' => 'YmVnc9o0MQgbk'
            ), $this->object->getUsers(true));
    }

    /**
     * @covers classes\Htpasswd::users
     */
    public function testUsers()
    {
        $this->object->addUser('pokus', 'aa')
                    ->addUser('pokus1', 'bb');
        $this->object->save();
        $this->assertFileExists(Htpasswd::FILE);

        $this->assertEquals(array('pokus', 'pokus1'), $this->object->getUsers());
        $this->assertEquals(array(
            'pokus' => 'YW61KcugLBIt2',
            'pokus1' => 'YmVnc9o0MQgbk'
            ), $this->object->getUsers(true));
    }

    /**
     * @covers classes\Htpasswd::existUser
     */
    public function testExistUser()
    {
        $this->object->addUser('pokus', 'aa')
                    ->addUser('pokus1', 'bb');
        $this->object->save();
        $this->assertFileExists(Htpasswd::FILE);

        $this->assertTrue($this->object->existUser('pokus'));
        $this->assertFalse($this->object->existUser('pokus2'));
    }

    /**
     * @covers classes\Htpasswd::addUser
     */
    public function testAddUser()
    {
        $this->object->addUser('pokus', 'aa')
                    ->addUser('pokus1', 'bb')
                    ->addUser('pokus2', 'cc');
        $this->assertEquals(array('pokus', 'pokus1', 'pokus2'), $this->object->getUsers());
    }

    /**
     * @covers classes\Htpasswd::editUser
     */
    public function testEditUser()
    {
        $this->object->addUser('pokus', 'aa');
        $this->assertEquals(array('pokus' => 'YW61KcugLBIt2'), $this->object->getUsers(true));

        $this->object->editUser('pokus', 'bb');
        $this->assertEquals(array('pokus' => 'YmVnc9o0MQgbk'), $this->object->getUsers(true));
    }

    /**
     * @covers classes\Htpasswd::delUser
     */
    public function testDelUser()
    {
        $this->object->addUser('pokus', 'aa')
                    ->addUser('pokus1', 'bb')
                    ->addUser('pokus2', 'cc');
        $this->assertTrue($this->object->existUser('pokus'));
        $this->assertTrue($this->object->existUser('pokus1'));
        $this->assertTrue($this->object->existUser('pokus2'));

        $this->object->delUser('pokus');
        $this->assertFalse($this->object->existUser('pokus'));
        $this->assertTrue($this->object->existUser('pokus1'));
        $this->assertTrue($this->object->existUser('pokus2'));
    }
}